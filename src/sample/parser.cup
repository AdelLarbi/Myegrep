
package sample;

/* Terminals (tokens returned by the scanner). */
terminal            SEMI, PLUS, MINUS, TIMES, DIVIDE, MOD;
terminal            UMINUS, LPAREN, RPAREN;
terminal Integer    NUMBER;

/* Non terminals */
non terminal            expr_list, expr_part;
non terminal Integer    expr;

/* Precedences */
precedence left PLUS, MINUS;
precedence left TIMES, DIVIDE, MOD;
precedence left UMINUS;

/* The grammar */
expr_list ::= expr_list expr_part 
			| expr_part;
expr_part ::= expr:e1 SEMI {: System.out.println( e1 ); :};
expr      ::= expr:e1 PLUS expr:e2 {: RESULT = e1 + e2; :}
            | expr:e1 MINUS expr:e2 {: RESULT = e1 - e2; :}
            | expr:e1 TIMES expr:e2 {: RESULT = e1 * e2; :}            
            | expr:e1 DIVIDE expr:e2 {: RESULT = e1 / e2; :}            
            | expr:e1 MOD expr:e2 {: RESULT = e1 % e2; :}            
	        | MINUS expr:e1 {: RESULT = -e1.intValue(); :} %prec UMINUS
            | LPAREN expr:e1 RPAREN {: RESULT = e1; :}
            | NUMBER:n {: RESULT = n; :}
	    	;
